openapi: 3.0.0
info:
  title: Wikey FIDO2 server API
  description: This is wikey FIDO2 server API
  contact:
    email: levi@wikey.ai
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://your-own-fido2-server.com
  description: this should be your own wikey fido2 server
paths:
  /api/registration/begin:
    post:
      summary: Start FIDO2 registration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        "400":
          description: bad request
        "500":
          description: internal server error
  /api/registration/complete:
    post:
      summary: Complete FIDO2 registration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteRegisterRequest'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteResponse'
        "400":
          description: bad request
        "500":
          description: internal server error
  /api/authentication/begin:
    post:
      summary: Start FIDO2 authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateRequest'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticateResponse'
        "400":
          description: bad request
        "500":
          description: internal server error
  /api/authentication/complete:
    post:
      summary: Complete FIDO2 authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteResponse'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticateResponse'
        "400":
          description: bad request
        "500":
          description: internal server error
components:
  schemas:
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
          format: email
    CompleteRegisterRequest:
      type: object
      properties:
        username:
          type: string
          format: email
        response:
          $ref: '#/components/schemas/CredentialCreationResponse'
    AuthenticateRequest:
      type: object
      properties:
        username:
          type: string
          format: email
        cache_key:
          type: string
          format: uuid
    CompleteAuthenticateRequest:
      type: object
      properties:
        username:
          type: string
          format: email
        cache_key:
          type: string
          format: uuid
        response:
          $ref: '#/components/schemas/CredentialAssertionResponse'
    RegisterResponse:
      type: object
      properties:
        publicKey:
          $ref: '#/components/schemas/RegisterResponse_publicKey'
    AuthenticateResponse:
      type: object
      properties:
        challenge:
          type: string
        allowCredentials:
          type: array
          items:
            $ref: '#/components/schemas/PublicKeyCredentialDescriptor'
        userVerification:
          type: string
    RelyingParty:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        displayName:
          type: string
    PublicKeyCredentialParameters:
      type: object
      properties:
        type:
          type: string
        alg:
          type: integer
    PublicKeyCredentialDescriptor:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
        transports:
          type: array
          items:
            type: string
    CredentialCreationResponse:
      type: object
      properties:
        rawId:
          type: string
        response:
          $ref: '#/components/schemas/AuthenticatorAttestationResponse'
        type:
          type: string
        transports:
          type: array
          items:
            type: string
    CredentialAssertionResponse:
      required:
      - authenticatorData
      - clientDataJSON
      - rawResponse
      - signature
      - userHandle
      type: object
      properties:
        rawResponse:
          type: string
          description: The raw response from the authenticator.
          format: binary
        signature:
          type: string
          description: The signature of the authenticator response.
          format: binary
        userHandle:
          type: string
          description: The user handle associated with the credential.
          format: binary
        authenticatorData:
          type: string
          description: The authenticator data returned by the authenticator.
          format: binary
        clientDataJSON:
          type: string
          description: The client data JSON sent to the authenticator.
          format: binary
        extensions:
          type: object
          additionalProperties:
            type: string
            format: binary
          description: Extensions returned by the authenticator.
    AuthenticatorAttestationResponse:
      type: object
      properties:
        attestationObject:
          type: string
        authenticatorData:
          type: string
        clientDataJSON:
          type: string
    CompleteResponse:
      required:
      - verified
      type: object
      properties:
        verified:
          type: boolean
    RegisterResponse_publicKey:
      type: object
      properties:
        challenge:
          type: string
        rp:
          $ref: '#/components/schemas/RelyingParty'
        user:
          $ref: '#/components/schemas/User'
        pubKeyCredParams:
          type: array
          items:
            $ref: '#/components/schemas/PublicKeyCredentialParameters'
        timeout:
          type: integer
        attestation:
          type: string
        excludeCredentials:
          type: array
          items:
            $ref: '#/components/schemas/PublicKeyCredentialDescriptor'
        extensions:
          type: object
